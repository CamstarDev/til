/* 
:first-letter 为第一个字符的样式
:first-line 为第一行添加样式
:before 在元素内容的最前面添加的内容，需要配合content属性使用
:after 在元素内容的最后面添加的内容，需要配合content属性使用 


优先级
行内样式>ID选择器>类选择器>标签选择器 ， 首先加载标签选择器,再加载类选择器，然后加载ID选择器，最后加载行内样式

内外部样式加载顺序 就近原则
按照书写顺序依次加载，在同优先级的前提下，后加载的会覆盖先加载的同名样式，所以离的越近越优先

可以使用!important使某个样式有最高的优先级

color	        颜色	
line-height	    行高	                行之间的高度
text-align	    水平对齐方式	        取值：left、center、right
vertical-align	垂直对齐方式	        取值：top、middle、bottom可以用于图片和文字的对齐方式
text-indent	    首行缩进	
text-decoration	文本修饰	            取值：underline、overline、line-through
text-transform	字母大小写转换	        取值：lowercase、uppercase、capitalize首字母大写
letter-spacing	字符间距	
word-spacing	单词间距	            只对英文有效
white-space	    空白的处理方式	        文本超出后是否换行，取值：nowrap









*/

p:first-letter {
  color: red;
  font-size: 30px;
}
p:first-line {
  background: pink;
  text-decoration: underline;
}
p:before {
  content: "嘿嘿";
}
p:after {
  content: "哈哈";
}

/* color的四种写法

颜色名称：使用英文单词

16进制的RGB值：#RRGGBB
特定情况下可以缩写
#FFFFFF--->#FFF 白色 
#000000--->#000 黑色 
#FF0000--->#F00 红色 
#00FF00--->#0F0 绿色 
#0000FF--->#00F 蓝色 
#CCCCCC--->#CCC 灰色 
#FF7300--->无法简写
rgb函数：rgb(red,green,blue)
rgba函数：rbga(red,green,blue,alpha)
 */

 .color {
    color: rgb(25, 90, 146);
    color: #fff;
    color: #000;
    color: #f00;
    color: #0f0;
    color: #00f;
    color: rgba(0, 255, 170, 0.466);
 }

/* 
背景属性
background-color	    背景颜色	取值：transparent 透明
background-image	    背景图片	  必须使用url()方式指定图片的路径 如果是在css样式文件中使用相对路径，此时是相对于css文件，不是相对html文件
background-repeat	    背景图片的重复方式	 取值：repeat(默认)，repeat-x，repeat-y,no-repeat
background-position	    背景图片的显示位置	默认背景图显示在左上角
取值：
关键字：top、bottom、left、right、center
坐标：左上角为(0,0)坐标，向右为x正方向,向下为y正方向
CSS雪碧图，即CSS Sprites,也称为CSS精灵,一种CSS图像合并技术 含义：将网页中许多非常小的图标/图片整合到一张大图中，当访问面面时只需要下载一次，可以减少访问服务器的次数，提高性能
原理：使用background-position进行背景定位，使用坐标精确地定位出背景图片的位置

background-attachment	背景图片是否跟随滚动	 取值：scroll(默认)、fixed固定不动
background          	简写  简写属性：background:background-color|background-image|background-repeat|background-position 以空格隔开，书写顺序没有要求
*/



/* 
列表属性
list-style-type	    设置列表前的标记	取值：none、disc、circle、square、decimal 此时不再区分有序列表还是无序列表，只要设置列表前的标记就可以了
list-style-image	将图像作为列表前的标记	
list-style-position	设置标记的位置	取值：outside(默认)、inside
list-style	        简写	
 */

 .first{
    list-style-type:circle;
}
.second{
    list-style-image:url(https://img2.baidu.com/it/u=3697453073,3304860876&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500);
}
.third{
    list-style-type:circle;
    list-style-position:inside;
}
.fourth{
    list-style:circle url(https://img2.baidu.com/it/u=3697453073,3304860876&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500)inside;
    /* list-style:none; */
}

.nav li{
    list-style:none;
    float:left;
    width:70px;
}


/* 表格属性
border-collapse:表格中相邻的边框是否合并（折叠）为单一边框

取值：separated（默认） collapse 
*/

/* 盒子模型
盒子模型是网页布局的基础，将页面中所有元素都看作是一个盒子，盒子都包含以下几个属性：

width 宽度
height 高度
border 边框
padding 内边距
margin 外边距 

表示盒子的边框

分为四个方向：

上top、右right、下bottom、左left
border-top、border-right、border-bottom、border-left
每个边框包含三种样式：

border-top-color、border-top-width、border-top-style
border-right-color、border-right-width、border-right-style
border-bottom-color、border-bottom-width、border-bottom-style
border-left-color、border-left-width、border-left-style

style的取值
solid实线、dashed虚线、dotted点线、double双线、inset内嵌的3D线、outset外嵌的3D线

简写，三种方式：

按方向简写： 上右下左

border-top、border-right、border-bottom、border-left

书写顺序：

border-顺序：width style color

按样式简写：

border-color、border-width、border-style

书写顺序：

border-样式：top right bottom left

必须按顺时针方向书写，同时可以缩写：

border-width:2px;--------->四个边框的宽度均为2px
border-width:1px 2px;
border-width:1px 2px 4px;
规则：如果省略，则认为上下一样，左右一样

终级简写：

如果四个边框样式完全相同，border:width style color;

*/

div {
    
    width: 100px;
    height: 100px;
    background-color: #ccc;
    border-color: #a32828 #fff #faa #baf;
    border-width: 12px;
}

/* 
外边距的合并
当一个元素出现在另一个元素上面时，第一个元素的下边距与第二元素的上边距会发生合并
当一个元素包含在另一个元素中时，并且没有内边距或边框把外边距分隔开时，两个元素的上外边距会发生合并 */

div{
    width:50px;
    height:50px;
    background:#cccccc;
    border: 2px solid;
    border-color: #a32828 #fff #faa #baf;
}
.div1{
    margin-bottom:20px;
}
.div2{
    margin-top:30px;
}
.div3{
    width:100px;
    height:100px;
    background:blue;
    margin-top:20px;
    /* padding:2px;
*/			/* border:1px solid red; */
}
.div4{
    margin-top:30px;
}
p{
    margin:20px 0;
}



定位
通过position属性实现对元素的定位，有四种定位方式